---
- name: Install packages using apt
  apt:
    name: 
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg2
        - software-properties-common
        - python3-pip
    state: present
    update_cache: yes

- name: Add Docker GPG apt Key
  apt_key:
    url: "{{ docker_apt_gpg_key }}"
    state: present

- name: Add Docker Repository
  apt_repository:
    repo: "{{ docker_apt_repository }}"
    state: present
    update_cache: true

- name: Update apt and install docker-ce
  apt:
    name: docker-ce
    state: present
    update_cache: false

- name: Run and enable docker
  service:
    name: docker
    state: started
    enabled: true

# docker-compose

- name: Check current docker-compose version
  command: docker-compose --version
  register: docker_compose_current_version
  changed_when: false
  failed_when: false
  check_mode: no

- name: Delete existing docker-compose version if it's different.
  file:
    path: "{{ docker_compose_path }}"
    state: absent
  when: >
    docker_compose_current_version.stdout is defined
    and docker_compose_version not in docker_compose_current_version.stdout

# - set_fact:
#     docker_compose_current_version: "{{ docker_compose_current_version.stdout | regex_search('(\\d+(\\.\\d+)+)') }}"
#   when:
#     - docker_compose_current_version.stdout is defined

- name: Install or upgrade docker-compose
  get_url: 
    url : "https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-Linux-x86_64"
    dest: "{{ docker_compose_path }}"
    mode: 'a+x'
    #force: yes
  when: >
    docker_compose_current_version.stdout is not defined
    or docker_compose_version not in docker_compose_current_version.stdout

- name: pip docker Compose Install bottle while ensuring the umask is 0022 (to ensure other users can use it)
  pip:
    name: docker-compose
    umask: "0022"
  become: True