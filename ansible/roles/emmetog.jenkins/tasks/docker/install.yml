---
- name: Check if dir {{ jenkins_home }} exist
  stat:
    path: "{{ jenkins_home }}"
  register: is_jenkins_home_exist

- name: view is_jenkins_home_exist
  ansible.builtin.debug:
    var: is_jenkins_home_exist.stat.exists
    verbosity: 1

- name: Create dir {{ jenkins_home }}
  file:
    path: "{{ jenkins_home }}"
    state: directory
  when: is_jenkins_home_exist.stat.exists == false 

- name: set owner for {{ jenkins_home }}
  file:
    path: "{{ jenkins_home }}"
    owner: "{{ jenkins_config_owner }}"

- name: set group for {{ jenkins_home }}
  file:
    path: "{{ jenkins_home }}"
    group: "{{ jenkins_config_group }}"

- name: set permissions for {{ jenkins_home }}
  file:
    path: "{{ jenkins_home }}"
    mode: 0755
    state: directory

- name: Install the python3-docker
  apt:
    name: python3-docker
    state: present

- name: Container is running (with ingress port) "{{ jenkins_docker_image }}:{{ jenkins_version }}"
  community.docker.docker_container:
    name: "{{ jenkins_docker_container_name }}"
    image: "{{ jenkins_docker_image }}:{{ jenkins_version }}"
    container_default_behavior: "no_defaults"
    published_ports:
      - "{{ jenkins_port }}:8080"
    volumes:
      - "{{ jenkins_home }}:/var/jenkins_home"
    env:
      JAVA_OPTS: "{{ jenkins_java_opts }}"
  register: container_result
  when: jenkins_docker_expose_port

- name: Print container_result  from the previous task
  ansible.builtin.debug:
    var: container_result
    verbosity: 2

# - meta: end_play

- name: Container is running (without ingress port)
  docker_container:
    name: "{{ jenkins_docker_container_name }}"
    image: "{{ jenkins_docker_image }}:{{ jenkins_version }}"
    expose: "8080"
    volumes:
      - "{{ jenkins_home }}:/var/jenkins_home"
    env:
      JAVA_OPTS: "{{ jenkins_java_opts }}"
  register: container_result
  when: not jenkins_docker_expose_port

- name: Display all variables/facts known for a host
  ansible.builtin.debug:
    var: container_result
    verbosity: 4

- name: Pause container  # noqa 503
  pause:
    seconds: 45
  when: container_result.changed == "true"
