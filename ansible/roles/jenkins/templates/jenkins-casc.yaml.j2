---
credentials:
  system:
    domainCredentials:
    - credentials:
      - usernamePassword:
          id: "github_token"
          username: "{{ github_username }}"
          password: "{{ github_token }}"
          description: "Token for github"
          # scope: SYSTEM 
          scope: GLOBAL
      - basicSSHUserPrivateKey:
          id: jenkins_node_ssh_key
          username: jenkinsnode
          # passphrase: ${SSH_KEY_PASSWORD}
          description: "SSH private key file."
          privateKeySource:
            directEntry:
              privateKey: |
                {{ lookup('file', '../.keys/jenkinsmain/id_rsa_jenkinsmain')  | indent(16) }}
      - string:
          description: "sonartoken"
          id: "sonartoken"
          scope: GLOBAL
          secret: "{{ SONARQUBE_TOKEN }}"
jenkins:
  # agentProtocols,
  authorizationStrategy:
    # loggedInUsersCanDoAnything
    globalMatrix:
      permissions:
        - "USER:Job/Build:dev"
        - "USER:Job/Cancel:dev"
        - "USER:Job/Read:dev"
        - "USER:Job/Workspace:dev"
        - "USER:Overall/Administer:admin"
        - "USER:Overall/Read:authenticated"
          #        - "GROUP:Run/Replay:authenticated"
          #        - "Run/Update:authenticated"
  # clouds
  # crumbIssuer, 
  # disableRememberMe
  # disabledAdministrativeMonitors, 
  # globalNodeProperties
  # labelAtoms
  # labelString, 
  markupFormatter: "plainText"
  mode: NORMAL
  myViewsTabBar: "standard"
  # noUsageStatistics
  # nodeName
  # nodeProperties
  nodes:
    - permanent:
        labelString: nodejs
        launcher:
          ssh:
            host: "192.168.1.71"
            port: 22
            credentialsId: "jenkins_node_ssh_key"
            maxNumRetries: 10
            retryWaitTime: 15
            sshHostKeyVerificationStrategy: "NonVerifyingKeyVerificationStrategy"
            tcpNoDelay: true
        # mode
        name: "Name-jenkinsnode1-agent"
        nodeDescription: "jenkinsnode1 agent"
        nodeName: "nodeName-jenkinsnode1-agent"
        # nodeProperties
        numExecutors: 2
        remoteFS: "/home/jenkinsnode"
        # retentionStrategy
  numExecutors: 2 
  primaryView:
    all:
      name: "all"
  projectNamingStrategy: "standard"
  # proxy
  quietPeriod: 5
  # remotingSecurity
  # scmCheckoutRetryCount,
  securityRealm:
    local:
      allowsSignup: false
      users:
        - id: "admin"
          password: "{{ admin }}"
#          properties:
#            - timezone:
#              timeZoneName: "Europe/Kiev"
        - id: "dev"
          password: "{{ dev }}"
  slaveAgentPort: 50000
  # systemMessage
  updateCenter:
    sites:
    - id: "default"
      url: "https://updates.jenkins.io/update-center.json"
  views:
  - all:
      name: "all"
  viewsTabBar: "standard"
unclassified:
  sonarGlobalConfiguration:
    buildWrapperEnabled: false
    installations:
    - credentialsId: "sonartoken"
      name: "SonarQube9000"
      serverUrl: "{{ SONARQUBE_URL }}"
      triggers:
        skipScmCause: false
        skipUpstreamCause: false
#  timestamper:
#    allPipelines: false
#    elapsedTimeFormat: "'<b>'HH:mm:ss.S'</b> '"
#    systemTimeFormat: "'<b>'HH:mm:ss'</b> '"
tool:
  git:
    installations:
    - home: "git"
      name: "Default"
  mavenGlobalConfig:
    globalSettingsProvider: "standard"
    settingsProvider: "standard"
  sonarRunnerInstallation:
    installations:
    - name: "SonarQubeScannerName"
      properties:
      - installSource:
          installers:
          - zip:
              label: "built-in"
              url: "https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472.zip"
jobs:
  - file: /usr/local/seedjob_multipipeline.groovy
...